version: "3"

services:
  proxy:
    image: traefik:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/letsencrypt
    command:
      - --log.level=${TRAEFIK_LOG_LEVEL?ERROR}
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --accesslog
      - --log
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.address=:80
      # redirect http to https
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      # let's encrypt certificates
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.email=info@rssi.in
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    labels:
      # www to non-www domains 
      - traefik.http.middlewares.trimwww.redirectregex.regex=^https://www\.(.+)
      - traefik.http.middlewares.trimwww.redirectregex.replacement=https://$${1}
    restart: always
  web:
    image: ghcr.io/rssiweb/website:dockerize
    labels:
      - traefik.enable=true
      - traefik.http.routers.web.rule=Host(`${WEB_DOMAIN}`)
      - traefik.http.routers.web.tls.certresolver=myresolver
      - traefik.http.routers.web.entrypoints=websecure
      - traefik.http.routers.web.middlewares=trimwww

    environment:
      SALT: ${WEB_SALT}
      SECURE_CODE: ${WEB_SECURE_CODE}
      SECURE_CODE1: ${WEB_SECURE_CODE1}
      SECURE_CODE2: ${WEB_SECURE_CODE2}
    depends_on:
      - db

  portal:
    image: ghcr.io/rssiweb/portal:dockerize
    labels:
      - traefik.enable=true
      - traefik.http.routers.portal.rule=Host(`${PORTAL_DOMAIN}`)
      - traefik.http.routers.portal.tls.certresolver=myresolver
      - traefik.http.routers.portal.entrypoints=websecure
      - traefik.http.routers.portal.middlewares=trimwww
    environment:
      DB_HOST: db
      DB_NAME: ${PORTAL_DB_NAME}
      DB_USER: ${PORTAL_DB_USER}
      DB_PASSWORD: ${PORTAL_DB_PASSWORD}
      
    depends_on:
      - db

  gsheet2db:
    image: ghcr.io/rssiweb/gsheet2db:dockerize
    environment:
      CREDENTIALS_SERVICE_ACCOUNT: ${GSHEET2DB_CREDENTIALS_SERVICE_ACCOUNT}
      DATABASE_URL: ${GSHEET2DB_DATABASE_URL}
    depends_on:
      - db

  db:
    image: postgres:13
    ports:
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always

volumes:
  pg_data:
  certs: